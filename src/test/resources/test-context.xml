<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
     	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     	http://www.springframework.org/schema/aop 
     	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- Scans within the base package of the application for @Components to 
		configure as beans -->
	<context:component-scan base-package="youapp" />

	<!-- Configure test data source -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.test.driverClassName}" />
		<property name="url" value="${jdbc.test.url}" />
		<property name="username" value="${jdbc.test.username}" />
		<property name="password" value="${jdbc.test.password}" />
	</bean>

	<!-- Configure the search index -->
	<bean id="solrServer" class="org.apache.solr.client.solrj.impl.CommonsHttpSolrServer">
		<constructor-arg>
			<value>${solr.serverUrl}</value>
		</constructor-arg>
		<property name="connectionTimeout" value="${solr.connectionTimeout}" />
		<property name="defaultMaxConnectionsPerHost" value="${solr.defaultMaxConnectionsPerHost}" />
		<property name="maxTotalConnections" value="${solr.maxTotalConnections}" />
	</bean>

	<!-- <context:property-placeholder location="datasource.properties"/> -->

	<bean id="jdbcDbInitializer" class="youapp.test.JdbcDbInitializer">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="solrIndexInitializer" class="youapp.test.SolrIndexInitializer">
		<property name="solrServer" ref="solrServer" />
	</bean>

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>datasource.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<!-- Configure transaction manager -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- Enabling @AspectJ support -->
	<aop:aspectj-autoproxy />

	<!-- Configure log factory bean for injecting loggers into beans -->
	<bean id="logFactory"
		class="org.springframework.beans.factory.config.CommonsLogFactoryBean">
		<property name="logName" value="log" />
	</bean>

	<!-- Message source for internationalization and localization -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!-- Configure conversion service for custom conversions -->
	<!-- org.springframework.format.support.FormattingConversionServiceFactoryBean -->
	<!-- org.springframework.context.support.ConversionServiceFactoryBean -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<ref bean="stringDateConverter" />
				<ref bean="dateStringConverter" />
			</list>
		</property>
	</bean>

	<!-- Custom converter -->
	<bean id="stringDateConverter" class="youapp.converters.StringDateConverter" />
	<bean id="dateStringConverter" class="youapp.converters.DateStringConverter" />
	

	<!-- Configure the job for Facebook data synchronization -->
	 
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
  		<property name="corePoolSize" value="20" />
  		<property name="maxPoolSize" value="50" />
  		<property name="queueCapacity" value="50" />
	</bean>
</beans>
